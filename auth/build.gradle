plugins {
	id 'java'
	id 'application'
	id 'no.nils.wsdl2java' version '0.10'
	id 'de.undercouch.download' version '4.0.4'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.sonarqube' version '2.8' apply false
    id 'com.palantir.docker-run' version '0.24.0'
	id "name.remal.check-updates" version "1.0.164"
}

if (System.properties['sonar.login'] != null) {
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    jacoco {
        toolVersion = "0.8.3"
    }
    // Wait for fix
    // build.finalizedBy('sonarqube')
}

sourceCompatibility = 11
targetCompatibility = 11
compileJava.options.encoding = 'UTF-8'

def myVersion = System.properties['versionOverride']
if ((myVersion?.trim())){
	version = myVersion
} else {
	version = "1.0-SNAPSHOT"
}

bootJar.enabled = false
jar.enabled = true

applicationDefaultJvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:6001"]

test {
    ignoreFailures = false
}

repositories {
	jcenter()
	mavenCentral()
}

mainClassName = 'dk.acto.auth.Main'


dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.10'

    implementation 'io.vavr:vavr:0.10.2'
    implementation'com.google.guava:guava:28.2-jre'

	implementation 'org.apache.commons:commons-lang3:3.9'
	implementation 'commons-codec:commons-codec:1.14'

	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf"

    implementation 'io.springfox:springfox-swagger2:2.9.2'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'

    implementation 'org.bouncycastle:bcprov-jdk15on:1.64'
    implementation 'com.hazelcast:hazelcast:4.0.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2:1.4.200'

    annotationProcessor "org.projectlombok:lombok:1.18.10"
    annotationProcessor 'io.vavr:vavr:0.10.2'

	implementation 'org.hibernate.validator:hibernate-validator:6.1.1.Final'
    implementation 'org.glassfish:javax.el:3.0.1-b11'

	implementation 'com.github.scribejava:scribejava-apis:6.9.0'
	implementation 'com.github.scribejava:scribejava-httpclient-okhttp:6.9.0'

	implementation 'com.auth0:java-jwt:3.9.0'

	//WSDL / Apache-cxf stuff
	implementation 'javax.xml.ws:jaxws-api:2.3.1'
	implementation 'javax.activation:activation:1.1.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	implementation 'org.apache.cxf:cxf-rt-frontend-jaxws:3.3.5'
	implementation 'org.apache.cxf:cxf-rt-transports-http:3.3.5'
	implementation 'org.apache.cxf:cxf-rt-transports-http-jetty:3.3.5'

	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
	implementation 'javax.jws:jsr181-api:1.0-MR1'

	wsdl2java 'javax.xml.ws:jaxws-api:2.3.1'
	wsdl2java 'javax.activation:activation:1.1.1'
	wsdl2java 'javax.xml.bind:jaxb-api:2.3.1'

	wsdl2java 'javax.annotation:javax.annotation-api:1.3.2'
	wsdl2java 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
	wsdl2java 'javax.jws:jsr181-api:1.0-MR1'

}

task downloadWSDLWsaGruppe(type: Download) {
	src 'https://wsagruppe.uni-login.dk/wsagruppe-v1/ws?WSDL'
	dest 'src/main/resources/wsdl/wsagruppe_v1.wsdl'
}
task downloadWSDLWsiBruger(type: Download) {
	src 'https://wsibruger.uni-login.dk/wsibruger-v3/ws?WSDL'
	dest 'src/main/resources/wsdl/wsibruger_v3.wsdl'
}
task downloadWSDLWsiInst(type: Download) {
	src 'https://wsiinst.uni-login.dk/wsiinst-v2/ws?WSDL'
	dest 'src/main/resources/wsdl/wsiinst_v2.wsdl'
}

wsdl2java {
	encoding = 'utf-8'
	wsdlsToGenerate = [
			['-wsdlLocation', 'classpath:wsdl/wsagruppe_v1.wsdl', project.file('src/main/resources/wsdl/wsagruppe_v1.wsdl')],
			['-wsdlLocation', 'classpath:wsdl/wsibruger_v3.wsdl', project.file('src/main/resources/wsdl/wsibruger_v3.wsdl')],
			['-wsdlLocation', 'classpath:wsdl/wsiinst_v2.wsdl', project.file('src/main/resources/wsdl/wsiinst_v2.wsdl')],
	]
	generatedWsdlDir = project.file('src/main/java/dk/acto/auth/generated')
}

wsdl2javaExt {
	deleteGeneratedSourcesOnClean = true
}

wsdl2java.dependsOn = [downloadWSDLWsaGruppe, downloadWSDLWsiBruger, downloadWSDLWsiInst]

distributions {
	main {
		distTar.archiveName = "auth.tar"
		distZip.enabled = false
		bootDistTar.enabled = false
		bootDistZip.enabled = false
	}
}
